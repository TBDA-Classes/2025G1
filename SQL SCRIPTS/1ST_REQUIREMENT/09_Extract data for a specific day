-The idea here is to extract data for a specific day. First I found the number of recordings per day, then 
I looked for the days the most relevant.


--Variable_log_string - number of recordings per day :
--Code : 
SELECT
    to_char(date_trunc('day', to_timestamp(date / 1000.0)), 'YYYY-MM-DD') AS day,
    COUNT(*) AS count
FROM variable_log_string
GROUP BY day
ORDER BY count DESC;

--Variable_log_float - number of recordings per day :
--Code : 
SELECT
    to_char(date_trunc('day', to_timestamp(date / 1000.0)), 'YYYY-MM-DD') AS day,
    COUNT(*) AS count
FROM variable_log_float
GROUP BY day
ORDER BY count DESC;

--The days most relevant :
--Code :
WITH string_days AS (
    SELECT
        to_char(date_trunc('day', to_timestamp(date / 1000.0)), 'YYYY-MM-DD') AS day,
        COUNT(*) AS string_count
    FROM variable_log_string
    GROUP BY day
),
float_days AS (
    SELECT
        to_char(date_trunc('day', to_timestamp(date / 1000.0)), 'YYYY-MM-DD') AS day,
        COUNT(*) AS float_count
    FROM variable_log_float
    GROUP BY day
)
SELECT
    s.day,
    s.string_count,
    f.float_count,
    (s.string_count + f.float_count) AS total_count
FROM string_days s
JOIN float_days f ON s.day = f.day
ORDER BY total_count DESC;


--Extraction from the file string :
SELECT
    to_char(to_timestamp(date / 1000.0), 'YYYY-MM-DD HH24:MI:SS') AS timestamp,
    id_var,
    value
FROM variable_log_string
WHERE to_char(to_timestamp(date / 1000.0), 'YYYY-MM-DD') = '2021-03-18'
ORDER BY timestamp;


-- Extraction from the file float :

SELECT
    id_var,
    COUNT(*) AS nombre_de_valeurs,
    SUM(value) AS somme,
    AVG(value) AS moyenne,
    MIN(value) AS minimum,
    MAX(value) AS maximum
FROM variable_log_float
WHERE to_char(to_timestamp(date / 1000.0), 'YYYY-MM-DD') = '2021-03-18'
GROUP BY id_var
ORDER BY id_var;


