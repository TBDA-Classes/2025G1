## By analyzing the distribution of the activity_score we aim to find a precise number between 1 and 16 (amount of variables being considered) 
## that best separates background noise from true activity.
## We figured out this method because using the whole 4000+ variables resulted in a very skewed distribution and a big computational cost.
## The statistical approach here is to find the "elbow point" in the distribution where the rate of change is highest, indicating a natural threshold.

import pandas as pd
import matplotlib.pyplot as plt

file_path = "data/activity_score_dist.xlsx"
try:
    df = pd.read_excel(file_path).sort_values('activity_score').reset_index(drop=True)
except FileNotFoundError:
    print("Archivo no encontrado.")
    exit()

df['gradient'] = df['number_of_seconds'].diff()
elbow = df['gradient'].idxmin()
threshold = df.loc[elbow, 'activity_score']

print(f"Elbow en activity_score = {threshold}")

plt.plot(df['activity_score'], df['number_of_seconds'], marker='o')
plt.axvline(x=threshold, color='r', linestyle='--')
plt.gca().invert_xaxis()
plt.show()